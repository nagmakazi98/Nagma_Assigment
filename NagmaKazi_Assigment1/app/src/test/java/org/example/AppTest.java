/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;
import java.io.FileOutputStream;
import java.io.IOException;
import java.time.Duration;
import java.util.List;

import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

public class AppTest {
    private WebDriver driver;
    private WebDriverWait wait;
    private Workbook workbook;
    private Sheet sheet;
    private int rowNum;
    
    @BeforeClass
    public void setup() {
        System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");
        driver = new ChromeDriver();
        wait = new WebDriverWait(driver, Duration.ofSeconds(30));
        workbook = new XSSFWorkbook();
        sheet = workbook.createSheet("Product Details");
        rowNum = 1;

        // Header Row for Excel
        Row header = sheet.createRow(0);
        header.createCell(0).setCellValue("Product Name");
        header.createCell(1).setCellValue("Product Price");
        header.createCell(2).setCellValue("Discount Price");
    }

    @BeforeMethod
    public void navigateToHomePage() {
        driver.get("https://www.opencart.com/index.php?route=cms/demo");
    }

    @Test(priority = 1)
    public void testLogin() {
        WebElement loginButton = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//a[contains(text(),'Login')]")));
        loginButton.click();

        WebElement emailField = wait.until(ExpectedConditions.visibilityOfElementLocated(By.name("email")));
        WebElement passwordField = driver.findElement(By.name("password"));

        emailField.sendKeys("registered_email@example.com");
        passwordField.sendKeys("registered_password");

        WebElement submitButton = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//button[contains(text(),'Login')]")));
        submitButton.click();

        // Add assertion to verify login success
        Assert.assertTrue(wait.until(ExpectedConditions.urlContains("account")));
    }

    @Test(priority = 2)
    public void testNavigateToDemo() {
        WebElement demoLink = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//a[contains(text(),'Demo')]")));
        demoLink.click();

        WebElement viewStoreFrontButton = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//a[contains(text(),'View Store Front')]")));
        viewStoreFrontButton.click();

        Assert.assertTrue(wait.until(ExpectedConditions.urlContains("demo")));
    }

    @Test(priority = 3)
    public void testExtractProductDetails() {
        List<WebElement> products = driver.findElements(By.cssSelector(".product-layout .product-thumb"));

        for (WebElement product : products) {
            String productName = product.findElement(By.cssSelector(".caption h4 a")).getText();
            String productPrice = product.findElement(By.cssSelector(".price")).getText();
            String discountPrice = ""; // Modify the selector if there is a specific discount price element

            Row row = sheet.createRow(rowNum++);
            row.createCell(0).setCellValue(productName);
            row.createCell(1).setCellValue(productPrice);
            row.createCell(2).setCellValue(discountPrice);
        }

        // Save Excel file
        try (FileOutputStream fileOut = new FileOutputStream("ProductDetails.xlsx")) {
            workbook.write(fileOut);
        } catch (IOException e) {
            e.printStackTrace();
        }

        Assert.assertTrue(rowNum > 1); // Ensure products were added
    }

    @Test(priority = 4)
    public void testProductDetailsAndAddToCart() {
        List<WebElement> products = driver.findElements(By.cssSelector(".product-layout .product-thumb"));

        if (!products.isEmpty()) {
            products.get(0).findElement(By.cssSelector(".caption h4 a")).click();
        }

        WebElement productTitle = wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("h1")));
        Assert.assertTrue(productTitle.isDisplayed());

        WebElement quantityField = driver.findElement(By.id("input-quantity"));
        quantityField.clear();
        quantityField.sendKeys("2");

        WebElement addToCartButton = driver.findElement(By.id("button-cart"));
        addToCartButton.click();

        WebElement cartButton = wait.until(ExpectedConditions.elementToBeClickable(By.id("cart-total")));
        String cartCount = cartButton.getText();
        Assert.assertTrue(cartCount.contains("2 item(s)"));
    }

    @Test(priority = 5)
    public void testViewCartAndCheckout() {
        WebElement cartButton = wait.until(ExpectedConditions.elementToBeClickable(By.id("cart-total")));
        cartButton.click();
        WebElement viewCartButton = wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//strong[contains(text(),'View Cart')]")));
        viewCartButton.click();

        WebElement cartProductName = wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".table-responsive .text-left a")));
        Assert.assertTrue(cartProductName.isDisplayed());

        WebElement cartQuantityField = driver.findElement(By.name("quantity[1]"));
        cartQuantityField.clear();
        cartQuantityField.sendKeys("3");
        driver.findElement(By.cssSelector("button[data-original-title='Update']")).click();

        WebElement checkoutButton = wait.until(ExpectedConditions.elementToBeClickable(By.linkText("Checkout")));
        checkoutButton.click();

        wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("input-payment-firstname"))).sendKeys("John");
        driver.findElement(By.id("input-payment-lastname")).sendKeys("Doe");
        driver.findElement(By.id("input-payment-address-1")).sendKeys("123 Example St");
        driver.findElement(By.id("input-payment-city")).sendKeys("Example City");
        driver.findElement(By.id("input-payment-postcode")).sendKeys("12345");
        driver.findElement(By.id("input-payment-country")).sendKeys("United States");
        driver.findElement(By.id("input-payment-zone")).sendKeys("California");

        driver.findElement(By.id("button-payment-address")).click();
        wait.until(ExpectedConditions.elementToBeClickable(By.id("button-shipping-address"))).click();
        wait.until(ExpectedConditions.elementToBeClickable(By.id("button-shipping-method"))).click();
        wait.until(ExpectedConditions.elementToBeClickable(By.id("button-payment-method"))).click();
        driver.findElement(By.name("agree")).click();
        driver.findElement(By.id("button-confirm")).click();

        WebElement confirmationMessage = wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".alert.alert-success")));
        Assert.assertTrue(confirmationMessage.isDisplayed());
    }

    @AfterClass
    public void tearDown() {
        if (driver != null) {
            driver.quit();
        }
    }
    }


